version: '3.4'

services:

  react-app:
     container_name: optimal.fe
     restart: always
     ports:
        - "5173:80"
     environment:
        - NODE_ENV=Development

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
         - "5672:5672"
         - "15672:15672"
 
  redisdb:
     container_name: redisdb
     restart: always
     ports:
         - "6379:6379"
     volumes:
       - redis_data:/data

  workspacedb:
    container_name: workspacedb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  optimal.api:
    container_name: optimal.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "Redis:ConnectionString=redisdb:6379"
    ports:
      - "8000:80"

  artificialintel.api:
    container_name: ai.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://workspacedb:27017"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "Redis:ConnectionString=redisdb:6379"
    depends_on:
      - workspacedb
    ports:
      - "8001:80"

  portainer:
     container_name: portainer
     restart: always
     ports:
        - "8080:8000"
        - "9000:9000"
     volumes:
       - /var/run/docker.sock:/var/run/docker.sock
       - portainer_data:/data
  
  
  

